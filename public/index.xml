<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 May 2025 09:29:03 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>test sync</title>
      <link>http://localhost:1313/posts/test-sync/</link>
      <pubDate>Sat, 17 May 2025 09:29:03 +0000</pubDate>
      <guid>http://localhost:1313/posts/test-sync/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;attachments/Pasted%20image%2020250517171816.png&#34; alt=&#34;&#34;&gt;&#xA;test&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/hugo-bugs/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/hugo-bugs/</guid>
      <description>&lt;h1 id=&#34;bug-list&#34;&gt;Bug list&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;draft not true&lt;/li&gt;&#xA;&lt;li&gt;date is in future&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>5002 Association Memo</title>
      <link>http://localhost:1313/posts/5002-association-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-association-memo/</guid>
      <description>&lt;h1 id=&#34;basic-concept&#34;&gt;Basic concept&lt;/h1&gt;&#xA;&lt;p&gt;The support of itemset of different size like:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;itemset-size1 :{B}&lt;/li&gt;&#xA;&lt;li&gt;itemset-size2: {A, B}&#xA;supp({B}) = count of apparence of B. &amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Association rule: {A, B} -&amp;gt; C&#xA;support of associaiton rule: supp({A, B}-&amp;gt;C) = supp({A, B, C})&#xA;confidence of association rule: conf({A, B}-&amp;gt;C) = supp({A, B, C}) / supp({A, B})&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Bayesian Classifier Memo</title>
      <link>http://localhost:1313/posts/5002-bayesian-classifier-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-bayesian-classifier-memo/</guid>
      <description>&lt;h1 id=&#34;conditional-probability&#34;&gt;Conditional Probability&lt;/h1&gt;&#xA;&lt;p&gt;$P(B | A) = \frac {P(A | B) P(B)} {P(A)}$&#xA;Assuming x, y, z are independent, we have:&#xA;$P(x, y, z | A) = P(x | A) + P(y | A) + P(z | A)$&lt;/p&gt;&#xA;&lt;h1 id=&#34;naive-bayesian-classifier&#34;&gt;Naive Bayesian Classifier&lt;/h1&gt;&#xA;&lt;p&gt;Assume all the attribute are independent, and we get:&#xA;$$\begin{align}&#xA;P(yes | race, income) &amp;amp;= \frac {P(race, income | yes) P(yes)} {P(race, income)} \&#xA;&amp;amp;= \frac {P(race | yes) P(income | yes) P(yes)} {P(race, income)}&#xA;\end{align}$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Data Stream Memo</title>
      <link>http://localhost:1313/posts/5002-data-stream-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-data-stream-memo/</guid>
      <description>&lt;h1 id=&#34;ideas&#34;&gt;Ideas&lt;/h1&gt;&#xA;&lt;h2 id=&#34;epsilon-deficient-synopsis&#34;&gt;$\epsilon$-deficient synopsis&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Condition 1: There is no false negative (true one wil be true)&lt;/li&gt;&#xA;&lt;li&gt;The difference between estimated and true is at most $\epsilon$N.(error rate)&lt;/li&gt;&#xA;&lt;li&gt;True frequencies less than (s-$\epsilon$)N are classified as infrequent (the most error one are still infrequent)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;kind&#34;&gt;Kind&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Sticky Sampling Algorithm&lt;/li&gt;&#xA;&lt;li&gt;Lossy Counting Algorithm&lt;/li&gt;&#xA;&lt;li&gt;Space-Saving Algorithm&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;sticky-sampling-algorithm&#34;&gt;Sticky Sampling Algorithm&lt;/h1&gt;&#xA;&lt;h2 id=&#34;properties&#34;&gt;properties&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;using probability&lt;/li&gt;&#xA;&lt;li&gt;has confidence parameter $\delta$ (how confident your result is)&lt;/li&gt;&#xA;&lt;li&gt;support threshold s and error parameter $\epsilon$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;bucket-design&#34;&gt;bucket design&lt;/h2&gt;&#xA;&lt;p&gt;$t = \lceil 1/ \epsilon ln(s^{-1}\sigma^{-1})\rceil$ (decide the size of each bucket)&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Decision Tree Memo</title>
      <link>http://localhost:1313/posts/5002-decision-tree-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-decision-tree-memo/</guid>
      <description>&lt;h1 id=&#34;type-of-decision-tree&#34;&gt;Type of Decision Tree&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ID3&#xA;Information gain&lt;/li&gt;&#xA;&lt;li&gt;C4.5&#xA;Information gain normalized by entropy(split info).&lt;/li&gt;&#xA;&lt;li&gt;CART&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;entropy&#34;&gt;Entropy&lt;/h1&gt;&#xA;&lt;p&gt;To measure how informative a distribution is.&#xA;The formula is as follows:&#xA;$\text{Entropy} = - \sum p log p$&#xA;Here, the logarithm is based on a base of two.&#xA;The greater the entropy is, the less informative the distribution is.&#xA;For example:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;P(tail) = 0.5  P(tail) = 0.5  entropy = 1&#xA;P(tail) = 1    P(tail) = 0    entropy = &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;We assume 0log 0 = 0 in the calculation&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Hierarchical Clustering Memo</title>
      <link>http://localhost:1313/posts/5002-hierarchical-clustering/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-hierarchical-clustering/</guid>
      <description>&lt;h1 id=&#34;kinds&#34;&gt;Kinds&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Agglomerative methods&#xA;It begin from clusters based on each data point to a big cluster containing all the data point&lt;/li&gt;&#xA;&lt;li&gt;Divisive Methods&#xA;From big cluster containing all the data point to cluster containing one data point.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;dendrogram&#34;&gt;Dendrogram&lt;/h1&gt;&#xA;&lt;p&gt;![[Pasted image 20250516131649.png]]&lt;/p&gt;&#xA;&lt;h1 id=&#34;distance&#34;&gt;Distance&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Single Linkage: The nearest distance between two point in two cluster&lt;/li&gt;&#xA;&lt;li&gt;Complete Linkage: The distance between two cluster is given by the distance between their most distant members&lt;/li&gt;&#xA;&lt;li&gt;Group Average Linkage: The average of the distance between all pairs of records (pair-wise)&lt;/li&gt;&#xA;&lt;li&gt;Centroid Linkage: The distance is defined as the distance between the mean vector of two cluster&lt;/li&gt;&#xA;&lt;li&gt;Median Linkage: The mid-point of the original two cluster cetnres is used as the centre of the new combined group. To avoid the characteristic properties of the small one are lost.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;bottom-upagglomerative&#34;&gt;Bottom-up(Agglomerative)&lt;/h1&gt;&#xA;&lt;p&gt;![[Pasted image 20250516133344.png]]&#xA;&lt;strong&gt;single linkage:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 K-means Clustering Memo</title>
      <link>http://localhost:1313/posts/5002-k-means-clustering/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-k-means-clustering/</guid>
      <description>&lt;h1 id=&#34;k-means&#34;&gt;K-means&lt;/h1&gt;&#xA;&lt;p&gt;First, we get a pre-defined parameter k.&#xA;We make k random guesses of the mean point.&#xA;Do iterations until the mean doesn&amp;rsquo;t change.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Assign each data point to the cluster whose mean is nearest&lt;/li&gt;&#xA;&lt;li&gt;Calculate the mean of each cluster&lt;/li&gt;&#xA;&lt;li&gt;Replace the cluster with a new mean&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;about-the-initialization-of-k-means&#34;&gt;About the initialization of k-means&lt;/h2&gt;&#xA;&lt;p&gt;The popular way to initialize the starting mean is a random choice.&#xA;The result depends on the initial guess, and a suboptimal result is possible, so we do several different starting points.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Neural Network Memo</title>
      <link>http://localhost:1313/posts/5002-neural-network/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-neural-network/</guid>
      <description>&lt;h1 id=&#34;activation-function&#34;&gt;Activation Function&lt;/h1&gt;&#xA;&lt;h2 id=&#34;threshold-function-step-function-hard-limiter&#34;&gt;Threshold function, Step function, Hard Limiter&lt;/h2&gt;&#xA;&lt;p&gt;$$&#xA;y = \begin{cases}&#xA;1 \quad \text{if net } \geq 0\&#xA;0 \quad \text{if net } &amp;lt; 0&#xA;\end{cases}&#xA;$$&lt;/p&gt;&#xA;&lt;h2 id=&#34;linear-function&#34;&gt;Linear Function&lt;/h2&gt;&#xA;&lt;p&gt;Just Identiy Function&lt;/p&gt;&#xA;&lt;h1 id=&#34;rectifier-function--rectified-linear-unitrelu&#34;&gt;Rectifier Function / Rectified Linear Unit(ReLU)&lt;/h1&gt;&#xA;&lt;p&gt;$$&#xA;y = \begin{cases}&#xA;net \quad \text{if net } \geq 0\&#xA;0 \quad \text{if net } &amp;lt; 0&#xA;\end{cases}&#xA;$$&lt;/p&gt;&#xA;&lt;h1 id=&#34;sigmoid-function&#34;&gt;Sigmoid Function&lt;/h1&gt;&#xA;&lt;p&gt;![[Pasted image 20250515160346.png]]&lt;/p&gt;&#xA;&lt;h1 id=&#34;tanh-function&#34;&gt;tanh Function&lt;/h1&gt;&#xA;&lt;p&gt;![[Pasted image 20250515160408.png]]&lt;/p&gt;&#xA;&lt;h2 id=&#34;forwardsingle-neuron&#34;&gt;Forward(single neuron)&lt;/h2&gt;&#xA;&lt;p&gt;$\text{net} = w_1x_1 + w_2x_2 + b$&#xA;$y = \frac{1}{1 + e^{-net}}$&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Other Clustering Memo</title>
      <link>http://localhost:1313/posts/5002-other-clustering-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-other-clustering-memo/</guid>
      <description>&lt;h1 id=&#34;methods&#34;&gt;Methods&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Model-Based Clustering (EM algorithm)&lt;/li&gt;&#xA;&lt;li&gt;Density-Based Clustering (DBSCAN)&lt;/li&gt;&#xA;&lt;li&gt;Scalable Clustering Method (BIRCH)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;em-algorithm&#34;&gt;EM algorithm&lt;/h1&gt;&#xA;&lt;h2 id=&#34;why&#34;&gt;why?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;previous method, each point belongs to a single cluster. No point belongs to different cluster with probabilities.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;normal-distribution&#34;&gt;Normal distribution&lt;/h2&gt;&#xA;&lt;p&gt;$p(x|&amp;lt;\mu, \sigma&amp;gt;)=\frac{1}{\sqrt{2\pi}\sigma}e^{- \frac{(x-\mu)^2}{2\sigma^2}}$&#xA;sigma = standard derivation, mu = mean.&lt;/p&gt;&#xA;&lt;h2 id=&#34;procedure&#34;&gt;Procedure&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Initialize all $\mu_i$ and $\sigma_i$ (random)&lt;/li&gt;&#xA;&lt;li&gt;For each point x, we calculate its probability belong to cluster i. (formula: $p(x\in C_i) = \frac{p(x|&amp;lt;\mu_i, \sigma_i&amp;gt;)} { \sum p(x|&amp;lt;\mu, \sigma&amp;gt;})$, i.e. probability of cluster i divided by the sum of probability of all the clusters)&lt;/li&gt;&#xA;&lt;li&gt;We calculate the new mean of cluster, and update $\mu$. using formula($\mu_i = \sum_{X} x \frac{p(x\in C_i)}{\sum_y p(y\in C_i)}$. (i.e. according to the probabilities that all points belong to cluster i)&#xA;Repeat until converge&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;dbscan&#34;&gt;DBSCAN&lt;/h1&gt;&#xA;&lt;h2 id=&#34;why-1&#34;&gt;why?&lt;/h2&gt;&#xA;&lt;p&gt;traditional clustering cannot handle irregular shaped cluster&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Outlier Memo</title>
      <link>http://localhost:1313/posts/5002-outlier-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-outlier-memo/</guid>
      <description>&lt;h1 id=&#34;comparison&#34;&gt;Comparison&lt;/h1&gt;&#xA;&lt;p&gt;Statistical Model Disadv: Assume that the data follows a particular distribution.&#xA;Distance-based Model Adv: No assume distribution. But not density wise.&#xA;Density-Based Model Adv: can find local outliers&lt;/p&gt;&#xA;&lt;h1 id=&#34;concept&#34;&gt;Concept&lt;/h1&gt;&#xA;&lt;p&gt;$\epsilon$ is the distance between p and the k-th nearest neighbor.&#xA;local reachability density lrd_k(p) is: $\frac 1 \epsilon$&#xA;local outlier factor(LOF) is $(\sum_{o \in N_k(p)} \frac{lrd_k(o)}{lrd_k(p)})/{k}$&#xA;N_k(p) is the $\epsilon$-neighborhood of p (excluding p).&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Recurrent Neural Network Memo</title>
      <link>http://localhost:1313/posts/5002-recurrent-neural-network-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-recurrent-neural-network-memo/</guid>
      <description>&lt;h1 id=&#34;difference-with-neural-network&#34;&gt;Difference with Neural Network&lt;/h1&gt;&#xA;&lt;p&gt;The output of RNN are passed to the next RNN network (internal variable).&lt;/p&gt;&#xA;&lt;h1 id=&#34;multilayer&#34;&gt;Multilayer&lt;/h1&gt;&#xA;&lt;p&gt;Actually, these rnn can have multiple layers and multiple memory units.&lt;/p&gt;&#xA;&lt;h1 id=&#34;basic-rnn&#34;&gt;Basic RNN&lt;/h1&gt;&#xA;&lt;p&gt;The basic rnn is simple. It use internal variable(s) as output variable(y). And the s can be calculated by using:&#xA;$s_t = tanh(W [x_{t}, s_{t-1}] + b)$&#xA;$y_t = s_t$&lt;/p&gt;&#xA;&lt;h1 id=&#34;lstm&#34;&gt;LSTM&lt;/h1&gt;&#xA;&lt;p&gt;There are components:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;internal variable to store memory&lt;/li&gt;&#xA;&lt;li&gt;forget feature to forget some portion of internal variable&lt;/li&gt;&#xA;&lt;li&gt;input feature to decide portion of input and strength of input&lt;/li&gt;&#xA;&lt;li&gt;output feature to decide portion of output and strength of output&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;some-significant-difference&#34;&gt;Some significant difference&lt;/h2&gt;&#xA;&lt;p&gt;First, the output and internal state previous are input, too.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Subspace clustering Memo</title>
      <link>http://localhost:1313/posts/5002-subspace-clustering-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-subspace-clustering-memo/</guid>
      <description>&lt;h1 id=&#34;methods&#34;&gt;Methods&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Dense Unit-based Method&lt;/li&gt;&#xA;&lt;li&gt;Entropy-Based Method&lt;/li&gt;&#xA;&lt;li&gt;Transformation-Based Method&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;why-subspace-clustering&#34;&gt;why subspace clustering?&lt;/h2&gt;&#xA;&lt;p&gt;dimension curse: when the number of dimensions increases, the distance between any two points is nearly the same.&lt;/p&gt;&#xA;&lt;h1 id=&#34;dense-unit-based-method&#34;&gt;Dense Unit-based Method&lt;/h1&gt;&#xA;&lt;h2 id=&#34;property&#34;&gt;Property&lt;/h2&gt;&#xA;&lt;p&gt;If a set is cluster in k dimension, then it&amp;rsquo;s part of cluster in k-1 dimension, too.&lt;/p&gt;&#xA;&lt;h2 id=&#34;algorithm&#34;&gt;Algorithm&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Identify sub-space that contain dense units (aprior algorithm, find x, y, z these dimension)&lt;/li&gt;&#xA;&lt;li&gt;Identify clusters in each sub-space that contain dense units (base on previous found x, y, z dimension, we find cluster like {x:[1, 10] y: [11, 20]}, etc..)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;adapt-aprior&#34;&gt;adapt aprior&lt;/h2&gt;&#xA;&lt;p&gt;for example, we get grid of 10, and mark $X_1$ as [1, 10], and so on. threshold 1.&#xA;( 1, 19) $X_0$ $Y_1$&#xA;(11, 29) $X_1$ $Y_2$&#xA;(21, 39) $X_2$ $Y_3$&#xA;(31, 49) $X_3$ $Y_4$&#xA;(41, 59) $X_4$ $Y_5$&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 SVM Memo</title>
      <link>http://localhost:1313/posts/5002-svm-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-svm-memo/</guid>
      <description>&lt;h1 id=&#34;linear-support-vector-machine&#34;&gt;Linear Support Vector Machine&lt;/h1&gt;&#xA;&lt;p&gt;We can generalize this problem as this:&#xA;$$&#xA;\begin{align}&#xA;\min w_1^2 + w_2^2 \&#xA;\text{subject to } y(w_1x_1+w_2x_2+b) \geq 1&#xA;\end{align}&#xA;$$&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-minimizing-this-term&#34;&gt;Why minimizing this term?&lt;/h2&gt;&#xA;&lt;p&gt;Because we want to maximize the distance D between two line. The D is involved in w by $\frac{w}{D}$.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-transform-maximizing-to-minimizing&#34;&gt;Why transform maximizing to minimizing?&lt;/h2&gt;&#xA;&lt;p&gt;We want to transform the objective function from a non-linear form to a quadratic form.&lt;br&gt;&#xA;Then, the problem becomes a form of quadratic programming which has many existing efficient techniques for that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Web Database Memo</title>
      <link>http://localhost:1313/posts/5002-web-database-memo/</link>
      <pubDate>Fri, 16 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-web-database-memo/</guid>
      <description>&lt;p&gt;Authority weight (in-degree)&#xA;Hub weight (out-degree)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A good authority has many edges from good hubs&lt;/li&gt;&#xA;&lt;li&gt;A good hub has many edges from good authorities&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;hit-algorithm&#34;&gt;Hit Algorithm&lt;/h1&gt;&#xA;&lt;p&gt;Two steps:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Sampling Step&lt;/li&gt;&#xA;&lt;li&gt;Iteration Step&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;sampling-step&#34;&gt;sampling step&lt;/h2&gt;&#xA;&lt;p&gt;Given a user query with several terms, we collect a set of pages that are very relevant &amp;ndash; called the base set.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We get all the web page that contain any query terms. This is called root set.&lt;/li&gt;&#xA;&lt;li&gt;We find the link pages, which are linked by or link to web pages of root set.&lt;/li&gt;&#xA;&lt;li&gt;Base set = link pages &amp;amp; root set&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;iteration-step&#34;&gt;Iteration Step&lt;/h2&gt;&#xA;&lt;p&gt;We know the hub weight of a web page is given by:&#xA;$h(N) = a(N) + a(MS) + a(A)$&#xA;etc..&#xA;so we can get:&#xA;$\vec{h} = [{h(N), h(MS), h(A)}]$&#xA;$\vec{a} = [{a(N), a(MS), a(A)}]$&#xA;$\vec{h} = M\vec{a}$&#xA;Here M represents adjacent matrix.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5002 Data Warehouse Memo</title>
      <link>http://localhost:1313/posts/5002-memo-data-warehouse/</link>
      <pubDate>Wed, 14 May 2025 17:10:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/5002-memo-data-warehouse/</guid>
      <description>&lt;h1 id=&#34;whats-data-warehouse&#34;&gt;What&amp;rsquo;s Data warehouse&lt;/h1&gt;&#xA;&lt;p&gt;Suppose there are two queries.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;select all the UST students coming from HK.&#xA;select all the UST students coming from Mainland.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;They are complicate query, and could cost for one day.&#xA;So we can store our pre-computed results.&#xA;This is Data Warehouse&amp;ndash;pre-computed results.&lt;/p&gt;&#xA;&lt;p&gt;User ask database, data warehouse could response without querying database.&lt;/p&gt;&#xA;&lt;h1 id=&#34;basic-ideas-about-how-to-build-warehouse&#34;&gt;Basic Ideas about how to build warehouse.&lt;/h1&gt;&#xA;&lt;p&gt;We know clearly that we there are query related to grouping or agregating. So we can build our warehouse according to these group.&#xA;Suppose there are table containing three different columns&amp;ndash; p, c, s.&#xA;we can mark a group by with p, c, s as pcs. And a group with c, s as cs, so on so forth.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PySpark Memo 4</title>
      <link>http://localhost:1313/posts/pyspark-memo-4/</link>
      <pubDate>Wed, 07 May 2025 16:55:33 +0800</pubDate>
      <guid>http://localhost:1313/posts/pyspark-memo-4/</guid>
      <description>&lt;h1 id=&#34;chapter-2&#34;&gt;Chapter 2&lt;/h1&gt;&#xA;&lt;h1 id=&#34;content&#34;&gt;Content&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Aggregate And GroupBy&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;codes&#34;&gt;Codes:&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pyspark.sql &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SparkSession&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SparkSession&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;builder&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;appName(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DataFrame&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getOrCreate()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;, header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, inferSchema&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can do groupby and then aggregate.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You get 2 different way to do aggreate.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# where the aggregator, i.e. sum gives you a dataframe.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupBy(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupBy(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupBy(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;avg()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupBy(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Another way to do aggregate:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;agg({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Salary&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>PySpark Memo 3</title>
      <link>http://localhost:1313/posts/pyspark-memo-3/</link>
      <pubDate>Wed, 07 May 2025 01:31:22 +0800</pubDate>
      <guid>http://localhost:1313/posts/pyspark-memo-3/</guid>
      <description>&lt;h1 id=&#34;chapter-2&#34;&gt;Chapter 2&lt;/h1&gt;&#xA;&lt;h1 id=&#34;content&#34;&gt;Content&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Filter Operation&lt;/li&gt;&#xA;&lt;li&gt;including: &amp;amp;, |, ==, ~&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;codes&#34;&gt;Codes:&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pyspark.sql &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SparkSession&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SparkSession&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;builder&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;appName(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DataFrame&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getOrCreate()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;, header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, inferSchema&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# filter first format:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filter(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Salary&amp;lt;=2000&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# filter second format:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filter(df_spark[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Salary&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# filter and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filter((df_spark[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Salary&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; (df_spark[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Salary&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1500&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# you can use or as |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# filter ~ is also the same&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>PySpark Memo 2</title>
      <link>http://localhost:1313/posts/pyspark-memo-2/</link>
      <pubDate>Wed, 07 May 2025 01:16:44 +0800</pubDate>
      <guid>http://localhost:1313/posts/pyspark-memo-2/</guid>
      <description>&lt;h1 id=&#34;chapter-2&#34;&gt;Chapter 2&lt;/h1&gt;&#xA;&lt;h1 id=&#34;content&#34;&gt;Content&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Dropping Columns&lt;/li&gt;&#xA;&lt;li&gt;Dropping Rows&lt;/li&gt;&#xA;&lt;li&gt;Various Parameter In Dropping functionalities&lt;/li&gt;&#xA;&lt;li&gt;Handling Missing values by Mean, Median and Mode&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;codes&#34;&gt;Codes:&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pyspark.sql &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SparkSession&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SparkSession&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;builder&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;appName(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DataFrame&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getOrCreate()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;, header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, inferSchema&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;na&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This is default way of na.drop, any.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;na&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop(how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;any&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;all&amp;#39; will trop those containing every feature as na&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;na&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop(how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;all&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can add threshold, those get at least 2 non-na will remain.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;na&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop(how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;any&amp;#39;&lt;/span&gt;, threshold&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can use subset to limit the view from whole to a little subset, so that you can use threshold or &amp;#39;how&amp;#39; or flexible&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;na&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop(how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;any&amp;#39;&lt;/span&gt;, subset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Age&amp;#39;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# so you can fill in the na, too&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# you provide fill(value_to_fill, columns_to_select)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;na&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fill(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Missing Values&amp;#39;&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Experience&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#You can use MLlib, too&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pyspark.ml.feature &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Imputer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;imputer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Imputer(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;inputCols&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Experience&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Salary&amp;#39;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;outputCols&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;_imputed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(c) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Experience&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Salary&amp;#39;&lt;/span&gt;]]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setStrategy(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;median&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;imputer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fit(df_pyspark)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transform(df_spark)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>pyspark memo</title>
      <link>http://localhost:1313/posts/pyspark-memo/</link>
      <pubDate>Tue, 06 May 2025 21:17:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/pyspark-memo/</guid>
      <description>&lt;h1 id=&#34;chapter-1&#34;&gt;Chapter 1&lt;/h1&gt;&#xA;&lt;h1 id=&#34;content&#34;&gt;Content&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PySpark Datafram&lt;/li&gt;&#xA;&lt;li&gt;Reading The Dataset&lt;/li&gt;&#xA;&lt;li&gt;Checking the Datatype of the Column(Schema)&lt;/li&gt;&#xA;&lt;li&gt;Selecting Columns And indexing&lt;/li&gt;&#xA;&lt;li&gt;Check Describe option similar to Pandas&lt;/li&gt;&#xA;&lt;li&gt;Adding Columns&lt;/li&gt;&#xA;&lt;li&gt;Droping Columns&lt;/li&gt;&#xA;&lt;li&gt;Renaming Columns&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;codes&#34;&gt;Codes:&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pyspark.sql &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SparkSession&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# To use spark dataframe, we need session first&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SparkSession&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;builder&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;appName(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DataFrame&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getOrCreate()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This read will not infer header and the types&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#or you can use read option(k, v)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;option(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;header&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#And if you want to use something like auto casting, you can add inferSchema&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;option(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;header&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;, inferSchema&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# check your schema&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;printSchema()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; root&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|--&lt;/span&gt; Name: string (nullable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|--&lt;/span&gt; age: integer (nullable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|--&lt;/span&gt; Experience: integer (nullable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#You can do the read this way, too.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;, header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, inferSchema&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+---------+---+----------+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     Name&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;age&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;Experience&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+---------+---+----------+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;    Krish&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;Sudhanshu&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;    Sunny&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+---------+---+----------+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# if you want to select some columns&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;select(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;select([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Experience&amp;#39;&lt;/span&gt;])&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#The select will return you dataframe by the way.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# If you want just a column, you can do this.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Column&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# and like in pandas, there are &amp;#39;describe&amp;#39;, which can help you to print the statistics of your data. by the way, describe returns you a dataframe. &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;describe()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# So how can you replace, adding or *renaming columns?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This is adding new columns. And it is not in-place.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;withColumn(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Experience After 2 year&amp;#39;&lt;/span&gt;, df_spark[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Experience&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can drop, not in-place, too.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Experinece After 2 year&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can rename&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df_spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;withColumnRenamed(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;New Name&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Python Cookbook Memo</title>
      <link>http://localhost:1313/posts/python-cookbook-memo/</link>
      <pubDate>Tue, 06 May 2025 16:58:38 +0800</pubDate>
      <guid>http://localhost:1313/posts/python-cookbook-memo/</guid>
      <description>&lt;h1 id=&#34;31-round-of-numbers&#34;&gt;3.1 round of numbers&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;round(num, n_digit)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;round(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.23&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;round(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.8&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, something like 1.5 or 2.5, it will return you the nearest even number. Here, it shoulb be 2.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;round(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;round(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;n_digit can be negative, too. It will handle the digit before the decimal point.&lt;/p&gt;&#xA;&lt;h1 id=&#34;32-accurate-decimal-arithmetic&#34;&gt;3.2 Accurate Decimal Arithmetic&lt;/h1&gt;&#xA;&lt;p&gt;If you want more accurate arithmetic, do this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; decimal &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Decimal&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Decimal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;4.2&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Decimal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2.1&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; Decimal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;6.3&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And if you want to control the precision of your computation, you can use context like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Workflow</title>
      <link>http://localhost:1313/posts/workflow/</link>
      <pubDate>Tue, 29 Apr 2025 01:50:25 +0800</pubDate>
      <guid>http://localhost:1313/posts/workflow/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;first you need new a markdown using hugo.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo new posts/new.md&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;after that, you can edit this markdown anyway.&lt;/li&gt;&#xA;&lt;li&gt;change the status: draft to false.&lt;/li&gt;&#xA;&lt;li&gt;then you can check the updated site by:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if you need to see with draft:&#xA;hugo server -D &#xA;no draft:&#xA;hugo server&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;git add and commit then push.&lt;/li&gt;&#xA;&lt;li&gt;see the new site using url:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://shawrong.github.io&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;rong shuo&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
